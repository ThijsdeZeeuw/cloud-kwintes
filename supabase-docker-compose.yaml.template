version: '3'

services:
  supabase-db:
    image: supabase/postgres:15.1.0.117
    container_name: supabase-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${SUPABASE_DB_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  supabase-studio:
    image: supabase/studio:20240205-4b3b9d1
    container_name: supabase-studio
    restart: unless-stopped
    environment:
      - STUDIO_PG_META_URL=http://localhost:8080
      - POSTGRES_PASSWORD=${SUPABASE_DB_PASSWORD}
      - DEFAULT_ORGANIZATION=Default Organization
      - DEFAULT_PROJECT=Default Project
      - SUPABASE_URL=http://localhost:8000
      - SUPABASE_PUBLIC_URL=http://localhost:8000
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - STUDIO_PORT=3000
      - STUDIO_DEFAULT_ORGANIZATION=Default Organization
      - STUDIO_DEFAULT_PROJECT=Default Project
      - POSTGRES_HOST=supabase-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    ports:
      - "3000:3000"
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  supabase_data:
    name: supabase_data

networks:
  app-network:
    external: true 